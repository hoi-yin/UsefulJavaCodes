import java.util.*;
import java.io.*;
import static java.lang.Math.*;
public class StandardFormat {
  public static void main(String[] args)throws IOException {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    PrintWriter output = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));

    //Manipulating Inputs//
    1. To read a line
    String[] Line1 = br.readLine().split(" ");

    2. To input an integer
    int Input,Input1;
    Input = Integer.parseInt(Line1[0]);
    Input1 = Integer.parseInt(Line1[1]);

    3. To input a string
    String Input = Line1[0]

    4. To input a string and split it up by "" or anything intended
    String[] Input = Line1[0].split("");
    String Input1 = Input[0];

    //To convert//
    Double.parseDouble(Input);
    Integer.parseInt(Input);
    Integer.toString(Input);

    //Useful Classes//
    PriorityQueue<Integer> PQ = new PriorityQueue<Integer>();
    PriorityQueue<Class> PQ1 = new PriorityQueue<Class>(new infoComparator());
    PriorityQueue<int[]> PQ2 = new PriorityQueue<int[]>(new infoComparator());

    ArrayList<Integer> AL = new ArrayList<Integer>();
    ArrayList<Class> AL1 = new ArrayList<Class>();
    Collections.sort(AL1, new infoComparator());

    LinkedList<Integer> LL =new LinkedList<Integer>();
    LinkedList<Class> LL1 =new LinkedList<Class>();

    int [] Array = new int[5];
    Arrays.sort(Array);

    int [][] Array = new int[10][10];
    Arrays.sort(Array, Comparator.comparingDouble(o -> o[4]));
    Arrays.sort(Array, Comparator.comparingInt(o -> o[4]));

    HashMap<String,Integer> HH = new HashMap<String,Integer>();
    HashMap<Integer,String> HH1 = new HashMap<Integer,String>();
    HashMap<Integer, ArrayList<Integer>> HH2 = new HashMap<Integer, ArrayList<Integer>>();
    HashMap<String, Class> HH3 = new HashMap<String, Class>();

    TreeMap<Integer,TreeMap<Integer,Integer>> Map = new TreeMap<>();
    TreeMap<Integer, Integer> Map1 = new TreeMap<>();

    (Refer to Custom Class)
    Class Info = new Class("a",26.74,70); 

    //for loop//
    for(int i=0;i<input;i++){

        }

    //if, else if, else//
    if(statement){

    }
    else if(statement){

    }
    else{

    }

    //Print output//
    output.print(output);
    output.println(output);
    output.flush();
    output.close();
  }

  //To add custom functions//
  public static void TerminationOfDoom(HashMap<Integer, ArrayList<Integer>> Map, int[] Array , ArrayList<Integer> Array1, int a){

  }

  //To do recursion//
  public static void TerminationOfDoom(HashMap<Integer, ArrayList<Integer>> Map, int[] Array , ArrayList<Integer> Array1, int a){
    TerminationOfDoom(Map,Array,Array1,a);
  }

}

//Custom Class (Note that you can name Class as anything like class Athlete)//
class Class {
    private final String info;
    private final double first;
    private final int id;
    Class(String info, double first, int id) {
        this.info = info;
        this.first = first;
        this.id = id;
    }
    String getinfo() {
        return this.info;
    }
    double getfirst() {
        return this.first;
    }
    int getid() {
        return this.id;
    }
}

//To implement custom comparator//
1. Comparator 1 using a certain created Class (Refer to Custom Class)
class infoComparator implements Comparator<Class> {
    public int compare(Class p1, Class p2) {
        if(p1.getid()<p2.getid()){
            return -1;
        } else if (p1.getid()>p2.getid()){
            return 1;
        }else{
            return 0;
        }
    }
}

2. Comparator 2 using Arrays
class infoComparator implements Comparator<int[]> {
    @Override
    public int compare(int[] p1, int[] p2) {
        if(p1[2]<p2[2]){
            return -1;
        }
        else if(p1[2]>p2[2]){
            return 1;
        }
        else{
            return 0;
        }
    }
}


